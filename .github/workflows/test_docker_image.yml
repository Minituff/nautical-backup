name: Tests

on:
  workflow_dispatch: # Allow manually running
  workflow_call: # Allow another workflow to call this one
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize
    branches: # Target
      - 'main'
      - 'dev'
  push:
    branches:
      - 'api'  #! TODO: REMOVE
      # - 'codecov'
    # tags:
    #   - 'v*'

jobs:
  unit_test_and_coverage:
    name: Unit tests and coverage
    if: contains(github.event.head_commit.message, '[ci]') #! TODO: REMOVE
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        echo "Installing python requirements"
        pip install -r api/requirements.txt
        pip install -r pytest/requirements.txt

    - name: Run tests and collect coverage
      run: python3 -m pytest --cov pytest
      # pytest --cov pytest

    - name: Upload reports to Codecov
      uses: codecov/codecov-action@v4-beta
      env: 
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }} # Required for v4
      with:
        fail_ci_if_error: true

    # - name: Archive code coverage results
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: code-coverage
    #     path: coverage/
    #     retention-days: 5

  test_docker_image:
    name: Docker image tests
    if: contains(github.event.head_commit.message, '[ci]') #! TODO: REMOVE
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Validate Dockerfile supports multi-arch
      run: |
        echo "Checking if the base docker image supports amd64 and arm64..."
        bash ./tests/_validate_dockerfile.sh

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and export Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        load: true # Do not push this image
        tags: minituff/nautical-test
        build-args: |
            TEST_MODE=0
  
    - name: Run integration tests against Docker image
      run: |
        cd tests
        docker compose run nautical-backup-test1
        docker compose run nautical-backup-test2
        docker compose run nautical-backup-test3

    - name: Upload reports to Codecov
      uses: codecov/codecov-action@v4-beta
      env: 
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }} # Required for v4
      with:
        fail_ci_if_error: true
        files: tests/coverage/coverage.xml # The json file will not work here