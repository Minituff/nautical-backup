env:
  RUN_ONCE: False
  REPORT_FILE: True
  LOG_LEVEL: Debug
  REQUIRE_LABEL: False
  SKIP_CONTAINERS: ""
  SKIP_STOPPING: ""
  SELF_CONTAINER_ID: ""
  REPORT_FILE_LOG_LEVEL: ""
  REPORT_FILE_ON_BACKUP_ONLY: "" 
  DEST_LOCATION: ""
  SOURCE_LOCATION: ""
  KEEP_SRC_DIR_NAME: ""
  OVERRIDE_SOURCE_DIR: "" 
  OVERRIDE_DEST_DIR: ""
  DEFAULT_RNC_ARGS: ""
  USE_DEFAULT_RSYNC_ARGS: "" 
  RSYNC_CUSTOM_ARGS: ""
  USE_DEST_DATE_FOLDER: '%Y-%m-%d'
  DEST_DATE_FORMAT: "date/container"
  DEST_DATE_PATH_FORMAT: 
  ADDITIONAL_FOLDERS: ""
  ADDITIONAL_FOLDERS_WHEN: before
  SECONDARY_DEST_DIRS: ""
  PRE_BACKUP_EXEC: ""
  POST_BACKUP_EXEC: ""

# All container configs will use these configs unless overriden
# This name MUST be exactly as is
# All values can be overridden by [containers] config
DEFAULT_CONTAINER_CONFIG:
  name: DEFAULT CONFIG
  description: All container configs will use these configs unless overriden. Do not delete

  backup:
    enabled: True # If false, no volumes will be backed up
    require_label: False
    destination_format: ""
    zip: true      # Can be set globally, or override per-container or per-volume
    restore_map: true   # Nautical-manifest file for restoration (future planned)
    dest_dirs:  # Directories where the conainers will be backup to
      - "/data/desitination"
      - "/data/destination2"

  volumes:
    max_size: 10gb # Global Size limit for all volumes. Adds additional time to compute--recommended to use on a per container basis

    # Regex must match the entire path: https://regex101.com
    # At least one allow is required, or all volumes will be skipped
    filters:
      # The volume will only be processed if the host path (source) starts with any of these paths. 
      allow_src:
        - "/workspaces/nautical-backup/dev/.*"
        - "/var/lib/docker/volumes/.*"
      
      allow_dest:
        - "/data.*"

      deny_src:
        - "/var/run/docker.sock"

      deny_dest: 
        - "/var/run/docker.sock"

containers:
  Nautical-Backup:
    name: Nautical Backup config
    description: desc
    match:
      # One of the following must be true
      container_name: "Nautical"
      container_id: "123abc"
      container_label: "container_1" # Applied using "nautical-backup.match.container_label=container_1"
      container_image: "minituff/nautical-backup"
    require_label: False
    group:
      name: test
      priority: 100
    volumes:
      none: True # No volumes should be associate with this container
      max_size: 10gb # Do not backup anothing over this size.

  vscode_devcontainer:
    name: VSCODE dev
    description: I need this to not get backed up
    match:
      # One of the following must be true
      container_id: "038e21324e573026236ae13c4220d47a5d6e474448fda627245543d0f713a3b7"
      container_name: "relaxed_ptolemy"
    backup:
      enabled: False # If false, no volumes will be backed up
      require_label: True
  
  nautical-backup_devcontainer-devcontainer :
    match:
      container_name: "nautical-backup_devcontainer-devcontainer "
    backup:
      enabled: False # If false, no volumes will be backed up

  watchtower:
    name: Watchtower
    description: Debug testing
    match:
      container_name: watchtower

directory:
  mappings:
    data_folder:
      host_path: "/workspaces/nautical-backup/dev" # The path on the host machine we are mapping 
      nautical_path: "/data" # That path within Nautical we map the host_path to
      description: "Idk"
  
    docker_volumes:
      host_path: /var/lib/docker/volumes" # The path on the host machine we are mapping 
      nautical_path: "/data/volumes" # That path within Nautical we map the host_path to
      description: "Docker Native volumes"

# TODO: Load config on startup, whether or not BACKUP_ON_START is true. This allows for immediate validation of configs